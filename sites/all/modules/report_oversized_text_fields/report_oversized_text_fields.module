<?php

/**
 * Implementatation of hook_menu().
 */
function report_oversized_text_fields_menu() {
	$items['report_oversized_text_fields'] = array(
		'title' => 'Report oversized text fields',
		'page callback' => '_report_oversized_text_fields_report',
		'access callback' => TRUE,
	);
	return $items;
}


function _report_oversized_text_fields_report() {

	$output = '';
	$base_path = base_path();
	$node_types = node_get_types('types');

	$output .= '<br><br><hr>';	
	$output .= '<h2 id="explain">Read this first:</h2>';
	$output .= '<p>If (in any of your nodes and node types) there are \'Text fields\' having a widget type \'Text field\' (a single row), and no \'Maximum length\' defined, AND field contents that is longer than 255 characters, you will have problems when migrating from Drupal 6 to 7 with CCK Migrate.</p>';
	$output .= '<p>To fix this, you have two options: 1) edit the field <strong>settings</strong> and make the widget type a \'Text area (multiple rows)\', 2) edit the field <strong>contents</strong> and make it maximum 255 characters. If you do one, you won\'t have to do the other. You may want to do 1) unless you only have few field contents to edit.</p>';
	$output .= '<p>After making any edits re-run this page and see if there still are fields reported. Fix and repeat until no fields are reported.</p>';
	$output .= '<p>If you decide to edit field settings, do this (after making proper backups, of course):</p>
		<ul>
		<li>Go to edit the field settings (click the provided link, opens to a new window)</li>
		<li>Click \'Change basic information\'</li>
		<li>Select Widget type - \'Text area (multiple rows)\'</li>
		<li>Click \'Continue\'</li>
		<li>Check that you have enough rows at the Rows field</li>
		<li>Click Save field settings</li>
		</ul>';
	$output .= '<p>After getting to a point where no fields are reported on this page, when you proceed to CCK Migrate (in Drupal 7) you may still see the message \'Invalid field/widget combination: The field \'something\' in the bundle \'something\' is an unlimited length field using a textfield widget, not allowed in D7. The field length will be set to 255.\' . This is because you may still have single row text fields without maximum length defined, but because you won\'t have any oversized (> 255) field data anymore, CCK Migrate will handle it and do what it says in the message.</p>';
	$output .= '<p>See more at <a href="https://www.drupal.org/node/1144136">https://www.drupal.org/node/1144136</a> and <a href="https://www.drupal.org/node/1117028">https://www.drupal.org/node/1117028</a>.</p>';
	$output .= '<p>This code is based on <a href="https://www.drupal.org/u/markj">Mark Jordan</a>\'s work at <a href="https://gist.github.com/mjordan/6175870">https://gist.github.com/mjordan/6175870</a>.</p>';
	$output .= '<p>Please report errors to <a href="mailto:kari.kaariainen@nettimaakari.fi">kari.kaariainen@nettimaakari.fi</a>.</p>';
	$output .= '<hr><br><br>';

	foreach ($node_types as $key => $value) {
		$type_machine_name = $value->type;
		$type_human_name = $value->name;

		// Get all nodes of type $type_machine_name.
		$output .= "<h2>Content type '$type_human_name'</h2>";
		$output .= "Getting all nodes of type <strong>'$type_machine_name'</strong>...<br>";
		$result = db_query("SELECT nid FROM {node} WHERE type = '$type_machine_name' ORDER By nid");
		$nids_of_this_type = array();
		while ($nids = db_fetch_object($result)) {
			$nids_of_this_type[] = $nids->nid;
		}
		$output .= 'Found: ' . count($nids_of_this_type) .  '<br>';

		// Get all fields for $type_machine_name.
		$type = content_types($type_machine_name);
		$fields = $type['fields'];

		// Pick out all the fields of type 'text_textfield'.
		$output .= "Getting all CCK fields of type 'text_textfield'...<br>";
		$text_fields = array();
		foreach ($fields as $field) {
			if ($field['widget']['type'] == 'text_textfield') {
				$text_fields[] = $field['field_name'];
			}
		}

		$output .= 'Found: ' . count($text_fields) .  '<br>';

		if (count($text_fields) > 0) {
			/**
			 * Iterate through each node and test all the values in all
			 * the fields we are interested in.
			 */
			$output_per_field = '';
			$output_per_node = '';
			$fields_that_might_be_edited = array();
			$output .= "Checking all field values in all nodes of type '$type_machine_name' for length greater than 255 characters...";
			foreach ($nids_of_this_type as $nid) {
				$node = node_load($nid, NULL, TRUE);
				foreach ($node as $key => $value) {
					if (in_array($key, $text_fields)) {
						$length = strlen($value[0]['value']);
						// If the length of a value is longer than 255, report it.
						if ($length >= 255) {
							$fields_that_might_be_edited[$key] = '<a href="' . $base_path . 'admin/content/node-type/' . $type_machine_name . '/fields/' . $key . '" target="_blank">edit</a> ';
							$output_per_node .= "<li>In node " . $node->nid . ", " . $key . 
								" has the following value that is $length characters long: " . 
								$value[0]['value'] . " \n";
							$output_per_node .=  '<a href="' . $base_path . 'node/' . $node->nid . '/edit/' . '" target="_blank">edit</a></li>';
						}
					}
				}
				
			}
			if (!$fields_that_might_be_edited) {
				$output .= '<br>Found: 0<br>';
			} else {
				$output .= '<br><strong>Fields and values were found.</strong> Here\'s what you can do (<a href="#explain">explain</a>): ';
				$output .= '<br><br>Edit these field <strong>settings</strong> and make them textareas: ';
				$output .= '<ul>';
				foreach ($fields_that_might_be_edited as $key => $value) {
					$output .=  '<li><a href="' . $base_path . 'admin/content/node-type/' . $type_machine_name . '/fields/' . $key . '" target="_blank">' . $key . '</a></li>';
				}
				$output .= '</ul>';
				$output .= 'Edit these field <strong>contents</strong> and make their lengths maximum 255 characters:';
				$output .= '<ul>' . $output_per_node . '</ul>';
			}
		}
		$output .= '<br><br>';

	}
	return $output;
}
